{"ast":null,"code":"var _jsxFileName = \"/home/loar/react-multi/rh-verse/src/components/hexial/Hexwin.jsx\";\nimport React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Hexwin() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"contact\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"row align-items-center my-5\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"col-lg-7\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            class: \"img-fluid rounded mb-4 mb-lg-0\",\n            src: \"http://placehold.it/900x400\",\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 11,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"col-lg-5\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            class: \"font-weight-light\",\n            children: \"Hexial Pulsuit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"YOU WIN!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 20,\n              columnNumber: 15\n            }, this), \" Mint your winning NFT\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"nav-item\",\n            children: /*#__PURE__*/_jsxDEV(NavLink, {\n              className: \"button\",\n              to: \"/hexq1\",\n              children: \"Begin Game\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Hexwin;\nlet provider = new ethers.providers.Web3Provider(window.ethereum);\nlet signer;\n\nasync function connectMetamask() {\n  await provider.send(\"eth_requestAccounts\", []);\n  signer = await provider.getSigner();\n  console.log(\"Account address:\", await signer.getAddress());\n  const balance = await signer.getBalance();\n  const convertToEth = 1e18;\n  console.log(\"account's balance in ether:\", balance.toString() / convertToEth);\n}\n\nasync function claimTokens() {\n  const runTokenContractAddress = \"0x00bcD49DcEaDbB4b9c7fF9E54a64CF2ad61ead61\";\n  const runTokenContractAbi = [\"function mintTokens(address account, uint256 amount) public\"];\n  const runTokenContract = new ethers.Contract(runTokenContractAddress, runTokenContractAbi, provider);\n  let convertToWei = 1000000000;\n  let amountToClaim = window.totalGweiScore * convertToWei;\n  await runTokenContract.connect(signer).mintTokens(signer.getAddress(), amountToClaim.toString());\n}\n\nasync function claimNft() {\n  const nftContractAddress = \"0x093298F529abdfCdA505e5C80A896478Dc32841a\";\n  const mintContractAbi = [\"function mint(uint256 amount) public\"];\n  const nftContract = new ethers.Contract(nftContractAddress, mintContractAbi, provider);\n  await nftContract.connect(signer).mint(window.totalNFTScore.toString());\n}\n\nexport default Hexwin;\n\nvar _c;\n\n$RefreshReg$(_c, \"Hexwin\");","map":{"version":3,"names":["React","NavLink","Hexwin","provider","ethers","providers","Web3Provider","window","ethereum","signer","connectMetamask","send","getSigner","console","log","getAddress","balance","getBalance","convertToEth","toString","claimTokens","runTokenContractAddress","runTokenContractAbi","runTokenContract","Contract","convertToWei","amountToClaim","totalGweiScore","connect","mintTokens","claimNft","nftContractAddress","mintContractAbi","nftContract","mint","totalNFTScore"],"sources":["/home/loar/react-multi/rh-verse/src/components/hexial/Hexwin.jsx"],"sourcesContent":["import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\n\nfunction Hexwin() {\n  return (\n    <div className=\"contact\">\n      <div class=\"container\">\n        <div class=\"row align-items-center my-5\">\n          <div class=\"col-lg-7\">\n            <img\n              class=\"img-fluid rounded mb-4 mb-lg-0\"\n              src=\"http://placehold.it/900x400\"\n              alt=\"\"\n            />\n          </div>\n          <div class=\"col-lg-5\">\n            <h1 class=\"font-weight-light\">Hexial Pulsuit</h1>\n            <p>\n              <h3>YOU WIN!</h3> Mint your winning NFT\n            </p>\n            <ul className=\"nav-item\">\n                                <NavLink className=\"button\" to=\"/hexq1\">\n                                    Begin Game\n                                </NavLink>\n                        </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nlet provider = new ethers.providers.Web3Provider(window.ethereum)\nlet signer\n\nasync function connectMetamask() {\n    await provider.send(\"eth_requestAccounts\", []);\n    signer = await provider.getSigner();\n    console.log(\"Account address:\", await signer.getAddress());\n\n    const balance = await signer.getBalance()\n    const convertToEth = 1e18;\n    console.log(\"account's balance in ether:\", balance.toString() / convertToEth);\n}\n\nasync function claimTokens() {\n    const runTokenContractAddress = \"0x00bcD49DcEaDbB4b9c7fF9E54a64CF2ad61ead61\";\n    const runTokenContractAbi = [\n        \"function mintTokens(address account, uint256 amount) public\",\n    ];\n    const runTokenContract = new ethers.Contract(runTokenContractAddress, runTokenContractAbi, provider);\n    let convertToWei = 1000000000\n    let amountToClaim = window.totalGweiScore * convertToWei\n    await runTokenContract.connect(signer).mintTokens(signer.getAddress(), amountToClaim.toString())\n}\n\nasync function claimNft() {\n    const nftContractAddress = \"0x093298F529abdfCdA505e5C80A896478Dc32841a\";\n    const mintContractAbi = [\n        \"function mint(uint256 amount) public\",\n    ];\n    const nftContract = new ethers.Contract(nftContractAddress, mintContractAbi, provider);\n    await nftContract.connect(signer).mint(window.totalNFTScore.toString())\n}\n\nexport default Hexwin;"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,kBAAxB;;;AAGA,SAASC,MAAT,GAAkB;EAChB,oBACE;IAAK,SAAS,EAAC,SAAf;IAAA,uBACE;MAAK,KAAK,EAAC,WAAX;MAAA,uBACE;QAAK,KAAK,EAAC,6BAAX;QAAA,wBACE;UAAK,KAAK,EAAC,UAAX;UAAA,uBACE;YACE,KAAK,EAAC,gCADR;YAEE,GAAG,EAAC,6BAFN;YAGE,GAAG,EAAC;UAHN;YAAA;YAAA;YAAA;UAAA;QADF;UAAA;UAAA;UAAA;QAAA,QADF,eAQE;UAAK,KAAK,EAAC,UAAX;UAAA,wBACE;YAAI,KAAK,EAAC,mBAAV;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QADF,eAEE;YAAA,wBACE;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QADF;UAAA;YAAA;YAAA;YAAA;UAAA,QAFF,eAKE;YAAI,SAAS,EAAC,UAAd;YAAA,uBACoB,QAAC,OAAD;cAAS,SAAS,EAAC,QAAnB;cAA4B,EAAE,EAAC,QAA/B;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA;UADpB;YAAA;YAAA;YAAA;UAAA,QALF;QAAA;UAAA;UAAA;UAAA;QAAA,QARF;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AA0BD;;KA3BQA,M;AA6BT,IAAIC,QAAQ,GAAG,IAAIC,MAAM,CAACC,SAAP,CAAiBC,YAArB,CAAkCC,MAAM,CAACC,QAAzC,CAAf;AACA,IAAIC,MAAJ;;AAEA,eAAeC,eAAf,GAAiC;EAC7B,MAAMP,QAAQ,CAACQ,IAAT,CAAc,qBAAd,EAAqC,EAArC,CAAN;EACAF,MAAM,GAAG,MAAMN,QAAQ,CAACS,SAAT,EAAf;EACAC,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgC,MAAML,MAAM,CAACM,UAAP,EAAtC;EAEA,MAAMC,OAAO,GAAG,MAAMP,MAAM,CAACQ,UAAP,EAAtB;EACA,MAAMC,YAAY,GAAG,IAArB;EACAL,OAAO,CAACC,GAAR,CAAY,6BAAZ,EAA2CE,OAAO,CAACG,QAAR,KAAqBD,YAAhE;AACH;;AAED,eAAeE,WAAf,GAA6B;EACzB,MAAMC,uBAAuB,GAAG,4CAAhC;EACA,MAAMC,mBAAmB,GAAG,CACxB,6DADwB,CAA5B;EAGA,MAAMC,gBAAgB,GAAG,IAAInB,MAAM,CAACoB,QAAX,CAAoBH,uBAApB,EAA6CC,mBAA7C,EAAkEnB,QAAlE,CAAzB;EACA,IAAIsB,YAAY,GAAG,UAAnB;EACA,IAAIC,aAAa,GAAGnB,MAAM,CAACoB,cAAP,GAAwBF,YAA5C;EACA,MAAMF,gBAAgB,CAACK,OAAjB,CAAyBnB,MAAzB,EAAiCoB,UAAjC,CAA4CpB,MAAM,CAACM,UAAP,EAA5C,EAAiEW,aAAa,CAACP,QAAd,EAAjE,CAAN;AACH;;AAED,eAAeW,QAAf,GAA0B;EACtB,MAAMC,kBAAkB,GAAG,4CAA3B;EACA,MAAMC,eAAe,GAAG,CACpB,sCADoB,CAAxB;EAGA,MAAMC,WAAW,GAAG,IAAI7B,MAAM,CAACoB,QAAX,CAAoBO,kBAApB,EAAwCC,eAAxC,EAAyD7B,QAAzD,CAApB;EACA,MAAM8B,WAAW,CAACL,OAAZ,CAAoBnB,MAApB,EAA4ByB,IAA5B,CAAiC3B,MAAM,CAAC4B,aAAP,CAAqBhB,QAArB,EAAjC,CAAN;AACH;;AAED,eAAejB,MAAf"},"metadata":{},"sourceType":"module"}