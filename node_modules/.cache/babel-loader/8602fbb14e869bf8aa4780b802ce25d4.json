{"ast":null,"code":"'use strict';\n\nvar u = require('universalify').fromCallback;\n\nvar fs = require('graceful-fs');\n\nvar path = require('path');\n\nvar copy = require('../copy').copy;\n\nvar remove = require('../remove').remove;\n\nvar mkdirp = require('../mkdirs').mkdirp;\n\nvar pathExists = require('../path-exists').pathExists;\n\nfunction move(src, dest, opts, cb) {\n  if (typeof opts === 'function') {\n    cb = opts;\n    opts = {};\n  }\n\n  var overwrite = opts.overwrite || opts.clobber || false;\n  src = path.resolve(src);\n  dest = path.resolve(dest);\n  if (src === dest) return fs.access(src, cb);\n  fs.stat(src, function (err, st) {\n    if (err) return cb(err);\n\n    if (st.isDirectory() && isSrcSubdir(src, dest)) {\n      return cb(new Error(\"Cannot move '\".concat(src, \"' to a subdirectory of itself, '\").concat(dest, \"'.\")));\n    }\n\n    mkdirp(path.dirname(dest), function (err) {\n      if (err) return cb(err);\n      return doRename(src, dest, overwrite, cb);\n    });\n  });\n}\n\nfunction doRename(src, dest, overwrite, cb) {\n  if (overwrite) {\n    return remove(dest, function (err) {\n      if (err) return cb(err);\n      return rename(src, dest, overwrite, cb);\n    });\n  }\n\n  pathExists(dest, function (err, destExists) {\n    if (err) return cb(err);\n    if (destExists) return cb(new Error('dest already exists.'));\n    return rename(src, dest, overwrite, cb);\n  });\n}\n\nfunction rename(src, dest, overwrite, cb) {\n  fs.rename(src, dest, function (err) {\n    if (!err) return cb();\n    if (err.code !== 'EXDEV') return cb(err);\n    return moveAcrossDevice(src, dest, overwrite, cb);\n  });\n}\n\nfunction moveAcrossDevice(src, dest, overwrite, cb) {\n  var opts = {\n    overwrite: overwrite,\n    errorOnExist: true\n  };\n  copy(src, dest, opts, function (err) {\n    if (err) return cb(err);\n    return remove(src, cb);\n  });\n}\n\nfunction isSrcSubdir(src, dest) {\n  var srcArray = src.split(path.sep);\n  var destArray = dest.split(path.sep);\n  return srcArray.reduce(function (acc, current, i) {\n    return acc && destArray[i] === current;\n  }, true);\n}\n\nmodule.exports = {\n  move: u(move)\n};","map":null,"metadata":{},"sourceType":"script"}