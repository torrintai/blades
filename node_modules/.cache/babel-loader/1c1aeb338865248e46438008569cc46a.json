{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/home/loar/react-multi/rh-verse/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/loar/react-multi/rh-verse/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.HardhatContext = void 0;\n\nvar extenders_1 = require(\"./core/config/extenders\");\n\nvar errors_1 = require(\"./core/errors\");\n\nvar errors_list_1 = require(\"./core/errors-list\");\n\nvar dsl_1 = require(\"./core/tasks/dsl\");\n\nvar platform_1 = require(\"./util/platform\");\n\nvar HardhatContext = /*#__PURE__*/function () {\n  function HardhatContext() {\n    _classCallCheck(this, HardhatContext);\n\n    this.tasksDSL = new dsl_1.TasksDSL();\n    this.extendersManager = new extenders_1.ExtenderManager();\n    this.configExtenders = []; // NOTE: This is experimental and will be removed. Please contact our team if\n    // you are planning to use it.\n\n    this.experimentalHardhatNetworkMessageTraceHooks = [];\n  }\n\n  _createClass(HardhatContext, [{\n    key: \"setHardhatRuntimeEnvironment\",\n    value: function setHardhatRuntimeEnvironment(env) {\n      if (this.environment !== undefined) {\n        throw new errors_1.HardhatError(errors_list_1.ERRORS.GENERAL.CONTEXT_HRE_ALREADY_DEFINED);\n      }\n\n      this.environment = env;\n    }\n  }, {\n    key: \"getHardhatRuntimeEnvironment\",\n    value: function getHardhatRuntimeEnvironment() {\n      if (this.environment === undefined) {\n        throw new errors_1.HardhatError(errors_list_1.ERRORS.GENERAL.CONTEXT_HRE_NOT_DEFINED);\n      }\n\n      return this.environment;\n    }\n  }, {\n    key: \"setConfigLoadingAsStarted\",\n    value: function setConfigLoadingAsStarted() {\n      this._filesLoadedBeforeConfig = (0, platform_1.getRequireCachedFiles)();\n    }\n  }, {\n    key: \"setConfigLoadingAsFinished\",\n    value: function setConfigLoadingAsFinished() {\n      this._filesLoadedAfterConfig = (0, platform_1.getRequireCachedFiles)();\n    }\n  }, {\n    key: \"getFilesLoadedDuringConfig\",\n    value: function getFilesLoadedDuringConfig() {\n      // No config was loaded\n      if (this._filesLoadedBeforeConfig === undefined) {\n        return [];\n      }\n\n      (0, errors_1.assertHardhatInvariant)(this._filesLoadedAfterConfig !== undefined, \"Config loading was set as started and not finished\");\n      return arraysDifference(this._filesLoadedAfterConfig, this._filesLoadedBeforeConfig);\n    }\n  }], [{\n    key: \"isCreated\",\n    value: function isCreated() {\n      var globalWithHardhatContext = global;\n      return globalWithHardhatContext.__hardhatContext !== undefined;\n    }\n  }, {\n    key: \"createHardhatContext\",\n    value: function createHardhatContext() {\n      if (this.isCreated()) {\n        throw new errors_1.HardhatError(errors_list_1.ERRORS.GENERAL.CONTEXT_ALREADY_CREATED);\n      }\n\n      var globalWithHardhatContext = global;\n      var ctx = new HardhatContext();\n      globalWithHardhatContext.__hardhatContext = ctx;\n      return ctx;\n    }\n  }, {\n    key: \"getHardhatContext\",\n    value: function getHardhatContext() {\n      var globalWithHardhatContext = global;\n      var ctx = globalWithHardhatContext.__hardhatContext;\n\n      if (ctx === undefined) {\n        throw new errors_1.HardhatError(errors_list_1.ERRORS.GENERAL.CONTEXT_NOT_CREATED);\n      }\n\n      return ctx;\n    }\n  }, {\n    key: \"deleteHardhatContext\",\n    value: function deleteHardhatContext() {\n      var globalAsAny = global;\n      globalAsAny.__hardhatContext = undefined;\n    }\n  }]);\n\n  return HardhatContext;\n}();\n\nexports.HardhatContext = HardhatContext;\n\nfunction arraysDifference(a, b) {\n  return a.filter(function (e) {\n    return !b.includes(e);\n  });\n}","map":null,"metadata":{},"sourceType":"script"}