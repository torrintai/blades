{"ast":null,"code":"'use strict';\n\nvar pTry = require('p-try');\n\nmodule.exports = function (concurrency) {\n  if (concurrency < 1) {\n    throw new TypeError('Expected `concurrency` to be a number from 1 and up');\n  }\n\n  var queue = [];\n  var activeCount = 0;\n\n  var next = function next() {\n    activeCount--;\n\n    if (queue.length > 0) {\n      queue.shift()();\n    }\n  };\n\n  return function (fn) {\n    return new Promise(function (resolve, reject) {\n      var run = function run() {\n        activeCount++;\n        pTry(fn).then(function (val) {\n          resolve(val);\n          next();\n        }, function (err) {\n          reject(err);\n          next();\n        });\n      };\n\n      if (activeCount < concurrency) {\n        run();\n      } else {\n        queue.push(run);\n      }\n    });\n  };\n};","map":null,"metadata":{},"sourceType":"script"}